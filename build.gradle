plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.sonarqube' version "4.4.1.3373"
	id 'jacoco'
}



group = 'semester3'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok:1.18.28'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-security:3.1.3'

	implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.3'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'



	implementation 'org.springframework.boot:spring-boot-starter-mail'


	implementation 'org.modelmapper:modelmapper:3.1.1'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.1.4'
//	implementation 'org.flywaydb:flyway-core'



}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

test{
	finalizedBy jacocoTestReport
}
sonarqube {
	properties {
		property 'sonar.projectKey', "Emergency-Web-Apps"
		property 'sonar.host.url', 'http://localhost:9000'
		property 'sonar.token', 'sqp_cdb2315a6fd0976de75327903a4f0e5e2ba8b012'
		property 'sonar.scm.disabled', 'true'
		property 'sonar.coverage.exclusions', '**/dto/**,**/entities/**,**/exceptions/**,**/repository/**,**/security/**,**/service/**,**/websocket/**,**/config/**,**/controllers/**,**/configurations/**,**/model/**,**/security/**,**/util/**,**/vo/**,**/modelmapper/**,**/modelmapper/**,fontys/emergencywebapps/EmergencyWebAppsApplication.class'
	}
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'**/dto/**',
					'**/entities/**',
					'**/exceptions/**',
					'**/repository/**',
					'**/security/**',
					'**/service/**',
					'**/websocket/**',
					'**/config/**',
					'**/controllers/**',
					'**/configurations/**',
					'**/model/**',
					'**/security/**',
					'**/util/**',
					'**/vo/**',
					'**/modelmapper/**',
					'**/modelmapper/**',
					'fontys/emergencywebapps/EmergencyWebAppsApplication.class',

			])
		}))
	}
}

